[build-system]
requires = ["poetry-core>=1.2.0", "wheel",]
build-backend = "poetry.core.masonry.api"


[tool.coverage.report]
exclude_lines = [
    "pragma: not covered",
    "@overload",
]


[tool.coverage.run]
branch = true
relative_files = true
omit = [
    ".tox/*",
    "tests/*",
]


[tool.poetry]
name = "doc-helper"
version = "0.1.0"
description = ""
package-mode = true

authors = ["MrLYC <github@m.mrlyc.com>"]
maintainers = ["MrLYC <github@m.mrlyc.com>"]

include = []
license = "MIT"
readme = "README.md"

homepage = "https://github.com/MrLYC/doc-helper"
repository = "https://github.com/MrLYC/doc-helper"
documentation = "https://github.com/MrLYC/doc-helper/tree/main/docs"

keywords = [
    "python3",
    "pdf",
    "web-crawler",
    "documentation",
    "playwright",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Typing :: Typed",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Text Processing :: Markup :: HTML",
    "Topic :: Office/Business :: Office Suites",
]


[tool.poetry.dependencies]
python = "^3.9.0"
playwright = "^1.55.0"
pypdf2 = "^3.0.1"
prometheus-client = "^0.23.1"
aiohttp = "^3.13.0"
fastapi = "^0.118.3"
uvicorn = {extras = ["standard"], version = "^0.37.0"}

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
mypy = "^1.18.2"
ruff = "^0.14.1"
pytest = "^8.4.2"
pytest-cov = "^7.0.0"
tox = "^4.30.3"
tox-gh-actions = "^3.4.0"
black = "^25.9.0"
pytest-asyncio = "^1.2.0"


[[tool.poetry.source]]
name = "tencent"
url = "https://mirrors.cloud.tencent.com/pypi/simple"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = """
--doctest-modules \
--cov=./ \
--cov-append \
--cov-report html:tests/reports/coverage-html \
--cov-report xml:tests/reports/coverage.xml \
--ignore=docs/
"""
testpaths = [
    "tests",
]
asyncio_mode = "auto"


[tool.ruff]
lint.fixable = ["ALL"]
lint.select = ["ALL"]
lint.ignore = [
    "D203",    # One blank line before class docstring
    "D212",    # Multi-line summary first line
    "PLR0913", # Too many arguments
    "Q000",    # Single quotes found but double quotes preferred
]
line-length = 120
show-fixes = true
src = ["src",]
target-version = "py311"


[tool.ruff.lint.flake8-copyright]
author = "MrLYC"


[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
multiline-quotes = "double"


[tool.ruff.lint.mccabe]
max-complexity = 10


[tool.ruff.lint.per-file-ignores]
# https://beta.ruff.rs/docs/rules/
"__init__.py" = ["F401", "F403", "F405",]
"tests/*" = ["ANN", "ARG", "INP001", "S101",]
"logger.py" = ["N815",]


[tool.ruff.lint.pylint]
max-args = 15
max-branches = 20
max-returns = 10
max-statements = 80


[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"


[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py39, py310, py311, py312, pypy3
skip_missing_interpreters = true

[gh-actions]
python =
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312
    pypy-3.10: pypy3

[testenv]
passenv = GITHUB_*
allowlist_externals = poetry

commands =
    poetry run pytest
    poetry run coverage report
"""
